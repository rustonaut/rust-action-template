name: On PR rust related checks.
on:
  pull_request:
    type: [opened, reopened, edited, synchronize]

jobs:
  #TODO make this an action (even through we will still run it as a job here)
  # so that we can reuse it in cargo-audit.yml to only run audit when we either
  # where triggered by schedule or if not is-wip (also only do the is-wip check
  # if we where not triggered by schedule)
  wip-check:
    runs-on: ubuntu-latest
    outputs:
      is-wip: ${{ steps.wip-check.outputs.is-wip }}
    steps:
      - uses: actions/github-script@v3
        id: wip-check
        with:
          script: |
            const pr = context.payload.pull_request;
            const issue_resp = await github.issues.get(pr);
            const is_wip = issue_resp.data.title.startsWith("WIP:")
            core.setOutput("is-wip", is_wip)
            if (is_wip) {
              core.setFailure("Can not merge WIP Pull Requests!")
            }

  style:
    runs-on: ubuntu-latest
    if: ${{ success() && needs.wip-check.outputs.is-wip != 'true' }}
    needs: wip-check
    steps:
      - uses: actions/checkout@v1
      - name: Check cargo fmt
        run: cargo fmt -- --check
      - name: Check clippy
        run: cargo clippy

  functionality:
    runs-on: ubuntu-latest
    if: ${{ success() && needs.wip-check.outputs.is-wip != 'true' }}
    needs: wip-check
    strategy:
      matrix:
        rust_version: [ "stable", "beta" ]
        features: [ "", "default", "*" ]
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust_version }}
      - name: Check build
        uses: ./.github/actions/run-cargo
        with:
          cmd: build
          features: ${{ matrix.features }}
          verbose: true
          deny_warnings: true
      - name: Run tests
        uses: ./.github/actions/run-cargo
        with:
          cmd: test
          features: ${{ matrix.features }}
          verbose: true
          deny_warnings: true

  signatures:
    runs-on: ubuntu-latest
    if: ${{ success() && needs.wip-check.outputs.is-wip != 'true' }}
    needs: wip-check
    steps:
      - uses: actions/checkout@v1
      - uses: ./.github/actions/verify-signatures
        with:
          require_signed_commits: false
          require_signed_tags: true
          require_tag_signing_fpr: ${{ secrets.TagSigningFpr }}
